<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA/FgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABX5SURBVHja7Z0JeJTVucchkEwSdoQCsi+yi4pKZWlx4brUharXulWLFrdqy1WqdaFa
        qlTF4lKtW29v7W3rUm+tvV4tdkHRWlGKIiKibJk1y0ySyTbJZJb//b4zKeBTUZhJIN98v/fx9/g81CZk
        8p3fd8573vOeLmVdSwQA7qQLHwIAAgAABAAACAAAEAAAIAAAQAAAgAAAAAEAAAIAAAQAAAgAABAAACAA
        AEAAAIAAAAABAAACAAAEAAAIAAAQAAAgAABAAACAAAAAAQAAAgAABAAACAAAEAAAIAAAQAAAgAAAAAEA
        AAIAAAQAAAgAABAAAALgQwBAAACAAAAAAQAAAoA8pFRlBZ8DnxMCAKdTrLIuNp42igw7uhTuomvRbuz6
        83/+t7v+v8WZr8fnigCgE7D7m7ptcO/YObi7q6ywh7wDBsk/ZpwCE6YoOHW6QkfNUvns41Rx0mmqmn+2
        qr52vsKXLNxJ1XkXmj+vPHW+yr90gkJHz1Hw0KMUmDhV/rGHmK9nf91dAmmThBEDMwcEAPvprd420Aus
        wefpJf+QkQoedqQqTjxF4QXfVM2Nt6j+p48q9n8vKb7uHbV+uFmJbduV9AeUrKhUqqZGqbp6pRsblY7H
        d9EUs/68TqnaqJKVlUoGgkps36HWzR8p/s56Nb34kuofekQ137tZ4YsWqPz4ExWYdKh8/QerrHuJmUGU
        mdkDMwUEAO1Dl10DvqygRL6hIxSaMVtV535d1YuvV/3j/6n4+g1KBkNKRaqtQdwkpVLaY6TTn/z3Hv/3
        PX8JJVNGHqlwRAmfX82vrFZ02V2KXHalKk44Wf5x442Ydi0lEAICgL2f2ltveTO97uaRt/cABafPUPiy
        KxRdvsIabK8qUeZVuqExM1g/a6Duz7D+LunWVjPDsGcd9Y88rsjV31boi3Pk6zvQ/Cw7lwssFRAA/Oub
        foe9lu9mveWHDLfW6aeq9rYfqumFF5UMhZRuafnkW9sM/s4y+j99RmEvK5KVVYr9caX5WSrmnSLfFw62
        fsZiZgYIAOwpvUngFRTL2+8LKp87T9G77lHzqtXmTZpvkSyvUOzlv6j2B7crdPQseXv1Y1aAANz6trcT
        eD0VmDBZ1YsWK/biSvO27FRv9Q4zQVIJf0CNz/5O4QUL5Rs2SmXdSzOfCc8HAsjntb2dJff2HWC97U9Q
        3YM/VXzDxsz03k2x+0qmoVEta942S4Tg4UeqrLhX26yAZwYB5Nkb39t/kCrPOEuNzzxrpsOfma13WyQS
        at2yVXX3P6jQzC9ZIujNjAABOH/P3t4K8w0cosozv6am3//B7MF/VuLMtbHb9qS9PKh/+DGVf+lYlZX0
        ziRHeZ4QgJMwb/we/VR52nw1Pfe8UtEog3xfwpod2YVLdQ9YM4IZs1RWWIIIEIATpvvWQ+rpodCcY9Xw
        i1+a4hwihxmBJQK77qF26R2m6nDXuQSeNQTQ6QZ/kfyjxqv2jh+ZElqifXME8bXrFLniW2ZJRX4AAXSq
        t769p111wcVq+fsas81FdNDEoClmcikV804yB5PKWBYggAOd6AtOPVz1j/1MqeoaRuj+mhD4A6agyNQQ
        IAEEcEDe+iW9VXXe1xV/511rrUpGf7/PBuJxxVb+yRyOQgIIYP9l+Lt65B85VnUr7iPJd6Al0BJX+NLL
        yQkggP03+O396djLf7bmoaz1D3S0rF0n/4ixzAAQwH44l1/cW+GLLlHrli0U8nSSMwW131+aOV3IM4oA
        OjLR5z1okGpvudU0wSA6R9idjoKHH8XbHwF08N6+td5v+K8nlI7FGHWdpUjI+qf+4UetWVnPzLFqnlUE
        0BGZfnuLr+kPL5g2WEQn2gYMBFU+Zy5vfwTQcW9+u2lF86uvMdo6YTQ++Yy8PftRFowAOuLsvkflx85T
        y1trGWmdMFKRiCq/+u/0DUAAHbTNZw1+u9Mu0TnD3oK1zwNwUQkCaGeswX/CiYq/t4Etvk6Z/LP+aWxS
        ZOGVpo8ifQQRQLsm/Mpnz1X83fUMtM5e+DN6PMk/BNDeCb+ZalnzVufps0/86wSgtVU1Ny0xrdMZuAig
        3d78gYlT1PyXVYywzr71t3WbgtOm8/ZHAO03+P3DRmX2+YlOvfa3OwPZNyOVFfVk7Y8A2qm8t/8gU01G
        A4/OH8lQuWmlzqk/BNA+FPZQzXe/Zy65JDp/NDzxK3l79WfAIoB2oFuJqs69wNyoSzig8CcaVeX8syn8
        QQDt06479MVZat24iZHllMKfl/4on7Vco+wXAeS87vcNHmb69He623WJT8//xWKZwp+uvP0RQK4U91L0
        9mXuu4vPyYU/b7wp/5hDKPtFALmX+doHSMydfIRDUv9J1Sy5LVP2y0BFALlM/f3jJqj5tb8xqBwUrZs+
        VHDyNAp/EEA7TP1X3E8TT0ct/tOqu/cBlRVR9IMAcp76n61kRSWDykGR2LZDoZlfZusPAeTWydc/fLRi
        f/4rI8pBb347Gn/1pLylfen3hwByKfgpVs0NN5H1d1rhT3WNKk8/k7U/AsjtiK/dMrr1oy2MKMcV/qyU
        bwCFPwggF3r0Ud0DD5pTZISDVgANjQovWMjaHwFkS6kp9y0//kRzgszVa+ndKx2TSaVjzUrV1SkZDpvP
        JukP7CIYUrKyUqmaGnNAKh1v3eP6vEMLf95aK/+IMUz/EUAOx3x79zdJJHen0ZPWWrparRs/MJ9Fzc1L
        FFl4uSrnn6nQzDkKTJpmDbRx5l49//CxCoybqOD0GaqYd5LCF16k6kXXqu6ee9W86lUlvF6lm5o6VgC2
        ryzp2Cc0zVVfnPlHANmu/StO+oqSVVWuy5zbyx17uzP251Wquf5GVZx8uul2ZPfP39GlcCdmem2/Yf+F
        IjN72vnfFZTId/BwhY6aaa5Br/vxvaZnoj1L6IhZQevmj+j4gwBy2/bz9hmgxiefdtdsv7lZ8Q3vK3rn
        3aZphu+gIdpR4Gkb7J6cZ1T21zBfq6jUTM/tDH39w4+p9aOPzfXc7ZP6Tyl613Lre/RgUCKAHN7+8052
        TdFPuimm5tWvK3L1dxQYP0llhaVtHXPaptDtOY3e+bUyMvAW91JwymGqvnaxKbHOtbFK0r7qazaFPwgg
        6wfUorSPGn7+i0wPuXw+6ptIqGXtP1T97f+Qf+hI87Y/INNme2ZgfW//0BGKXHalml9ZbaSUTTT8/Al5
        e/RlQCKAHBp9HD1TiW3b8zu35/Upuuxu+ceMz5ySswf+gUyYme9ticDutTBomCLXLDJy2pc+i6lIjSqs
        ZYVZZnQl+YcAssFan0bvXG49Tfn55rcz5Hb3YvvaMrufYadMlNmFO92KFZgwRXU/ecga2NV79bM1Pf+C
        fAO46gsB5NLee+RYxde9m5eD314f1y65Vb7BwzNr/IJOvhSzfh9eazlWdc75mZuWPmM5ZtcmhC+9jLU/
        Asih8MeagkYuv8o8TPlWyNPy9lpVnPbVTHbcaaWxlgjscuzGp3+7x/MYpuPP0FFs/SGA7LG3/pr+57n8
        mvInEmr6/f8qeNh0R/fCt//uvoEHK7r0DnPI5xM/o33V1w03mevYGYgIIPvk36y5SmzfkVf7+vWP/kz+
        EaPz481o12eU9Fb44m8o/sGmnUsC+wr2wJRpJonIQEQAWa45Paq5+da8OfRjL2Pq7vuJfAcNtuSWRwPD
        JAhLFDpmjmIrX7ZmOMm2jj89OPOPAHJ4s/T9gmJ/fDk/Br+1TrZPMHr7D87fjLg1Y7O3MGtvXargETPy
        S3IIYP9P/8u/fLxSkUhebPPZ9xR6BwzO/4SY/fN1L+XNjwByF4B96EWtCcdn/O0kpm/IcLLhgAD2Ovvf
        b2BeZP9b3lyj4NTD2QsHBLAva8nQUcc4PvtvN+KoOOV0Bj8ggH2pP7frxsMXfKPjG1V08Lo/+sNlmdJe
        HkRAAHtf/VfWvVi1t//I0Zd8Nv91lXzDR1MDDwhgX5tU2NVlLa+/4dypfziiqjPPMWXMPISAAPa15ff0
        o5UMhRwrAHPxRa9+tL4GBLDv23+FqjzrHKWidY493Vdx/Ils+QECyFYANTfcuE9NJzrNCT+7+82TT5tG
        nTx8gACyWP97e/ZVw69+48i3fyoaNZeVmm0/Wl8DAtj3+n//qDHmnLwji37+9ob8w0ay9gcEkHWTiSmH
        q3XrNgcu/pOqveU2tv0AAWQvgEKVzzneka2/7au3yo89wdENPgABHNgKwK6Fqjr/IqVjMccJIL52nWnj
        zQwAEEC2AujmUfXiGzI7AE6pAGyrVowuX2Eu7yD5BwggSwGUdS8xV0iZDkAOEoDd7CN8yUIzg0EAgACy
        PQLs6aPGX/7acWcAkpVVpvgnc/kFDx0ggOzOAPQd6MgWYIktWxU49HCq/wAB5CSAwUMVX/O2807+vbJa
        vqHDSQACAsgej2mVHV//nuME0PCL/1ZZaW8eOEAAOQlgzHi1bvrQcQKILruL/X9AALkKIHDIJCU+3uK4
        CsCam5aQAAQEkGsZcGDCZEsAW50lAPsKrOuuRwCAAHI+BzB1mhLbtjvrFLAlgOprFyMAQAC5C+Aw5wkg
        bglg0bUIABBAzkuASVOV2LKNGQCAW5OArQ5LAhoBXPddBAAIIHcBTFTr5o+dtwtw4y0IABBAznUAo8aq
        9f2NjusFWPvDZdQBAALIWQDDRir+zruOKwSqf/hxbgACBJDzWYCBQ9T82uuOE4B9gMk3cDBnAQAB5HQc
        uOdBanru+U+02XZEN6D1G+Q/ZCICAASQU0MQaxpd/8hjDusHkFbC51foqJnkAQAB5NYSrFg1t/7AWS3B
        rEjVRlV5+lmZnQA6AgECyFIABUWKXHG1lEg4qyWY9feNXP0d8/dHAIAAsqI0cy/gV+Zbb9RaR20D2tQ/
        9LDKPD0tAfDQAQLIshy4SKEjZynhDzivLfi778k/fIzZzuTBAwSQ7XmAiVPV+uFmxwkgczHIPBKBgABy
        qgU4eLjpsee0SCeSqvnezTQGBQSQE91LVf/AT+XEaF71ivyDh3E5KCCAbLETgdXXLFI6HnfeMqCCZQAg
        gJwFUHHafKVqah22BkibG43q7v8JuwGAAHLZCQgeeoSSDtwJMC0C3/9AgcmHkgsABJB1IrD/YDX/9RVH
        CsBuEFJ72+0ml8EDCAggm4rA7sXWIFrquDsCd9YEvL9RgYnMAgABZCeALoUKf32B0rGYfdbGeZFKKXrf
        Ayor7slDCAggm4Kg0IxZSuwok1PDPiFYcfKp2kFlICCAfcc3YLBiL7woJ0ds5Z/kHzqKpQAggGx2A2qX
        3JY5GuzQsO8MiN79Y3l79OFhBASwr/UAlaeeoVRdnaNnAanqGoUXfFM7uvMwAgLYpzyAf9Bwtfx9jZwe
        ie07VPGV01VWQIkwIIC9p7BU0XtWKB8i/t4GheaekDkuTNMQQAB7swwoUuUZZyoZjuSFBFr+sU7lx82z
        BEBSEBDA3lUFDhmu5lWvKl/CLhWunH+WyrqxHAAE8Pl0K1F02Z2muCZfIlHmVeSKq+Tt2Y8tQkAAn7cM
        CB0zW0m/X/kUqfp61T3woPxjxnN8GBDAnncDiuXt1V+NzzyrvIvWhFneVJ5xVqZWABEAAvj0WUDVeRea
        /vv5GMlIRPWPPq7QF2errKhnZkZAVyFAALslAwcPU/Pq15W3kU4rsXWb6u5/0IjA27Nvmwg8Ow9J8UCD
        OwVgbg3yqHrRdUo3tyivwxJB0udX41PPKHzRpfKPPkTeUksGBZ5dQjCzA2YI4JoZgL0M8JgLOOPvrpdb
        ItXQoPj699T466dUfe1ilc8+ToExE+QbMrTtfIEthe6WEAoBPpUueWW0biWquWmJ6brjtrB/ZrvpaOvG
        D0zb9IZf/lrR5feq5oabVX3NtQovuMzMGMIXA+wivwRgXxwyfrJ5K7pr9H9GZyT7bkJLDummmNKNTQCf
        oEu+rWnsG4SrFy1WuqXFke3CCGJ/Rt4JwMwCrHVwyxtv8tslCNcJwJ4FFHgUvmSh0g2N/IYJwm0CyLQM
        G6Km3z3Pb5gg3CiAsq5FqjjxFNN8kyAI1wmgxLTdjt653NF9AwkCAeSSEBw9noQgQbhSAHZC0FoKVJ1z
        vlJVYX7bBOE2ARhKeit69z2urBAkCARgnxMYMUaxP/2F3zhBuE4AbRIon3u8Elu28lsnCNcJwKZ7iSKX
        X5W3jUMIAgF8bvuwfqpbcR/5AIJwnQD+2T3o4BFqfPq3mU7CHBgiEIDL6FKk4KRpan79DZ4AAgG4kgKP
        yr98nLmIgyAQgAvZUVBsrhazL+IgCATgRrqVqOrcCzg0RCAA11JYqvA3LlUyGOSJIBCAO2cCbRIIlfNU
        EAjAnTOBHgpffIkSXl/m02GLkEAAbtsdKFbVueeTGCQQgGvpXqqKU89QfP0GnhACAbhzi9Cj0Jy5al79
        mpRiKUAgABfiUWDSVDU++7vMPQMEgQBcNhPo4jE3D0eXr1Cqrp4nhkAA7js74DGnCCPfukaJbdt5aggE
        4M7kYInK552s5tf+ljlJSBAIwH2zAfsa8vqHHmFJQCAA9y4JDlLk0ssV3/gBBUMEAnCfBIpN0VBw+gw1
        /OYpc9UyQSAAV1UNZpqLeA8apMhVVyu+/j1mAwQCcGObMbtmIHjoEap/7GdKVVfzZBEIwJW5gR59VXn2
        OeYOgnRzM08YgQBclxuwlgW+oSNVvei6zLIgweWkBAJwYZLQo8CEqaq99Qdq3bSZW4oJBODGZYHdcSg4
        7UjV3rbUEsGHSsfb7iSwE4YkDQkE4I4zBXb/wcDkaaq+/ka1vLWWrUMCAbhr27DU5Afs+gH/qHEKX7hA
        Tc89r4TX+8nSYmYFBAJwwdKgq0fePgMUOma2apfeoeZXVytVXYMACATgmhmBWR4UmYNGvoFDVHHSaaq7
        9341r3pVyUAQGRAIwE07ByZXYMtg0FCVH3u8am/+vhp/85RaP9ysdH3Dp28pIgkCAeTbzKA4MzMosJYJ
        pX3lHzFOlfPPVs1NS1T/8yfU8vZaJfwBpRsb2U0gEED+Fxd5LCEUZqRQ0lv+MeMUmjVXVRdcpOrrrjcd
        i2IvrVTi461KBkNKRarNcWVTjUghEoEA8vD8gSUDI4WCTA7B22egNVMYq9ARR6vi305R1dfOU+SyK1W9
        +AaTZLR7GNjXotuisJuaxNeuM3UJ7YV9NLrlzTVqef2NTo99M3TL2n+068+/x8/FIrZpk/l3h3+/jz5W
        YsvWvQYB5MNyoS2ZmJGCp00MbXLYDfviE2/vfvIOHCTfsBHyjx4r/4RJFpPbh/ET5Rsx2vraI51Be//8
        e8BnsdX6Pr798L0Ck6YoMHnqXoMAXHlycTe6tDNdHUaXfMOzTyAAABeDAAAQAAAgAABAAACAAAAAAQAA
        AgAABAAACAAAEAAAIAAAQAAAgAAAAAEAAAIAAAQAAAgAABAAACAAAEAAAIAAAAABAAACAAAEAAAIAAAQ
        AAAgAABAAACAAAAAAQAAAgAABAAACAAAEAAAIAAAQAAAgAAAEAAfAgACAAAEAAAIAAAQAADkN/8POL5B
        YDVGfaoAAAAASUVORK5CYII=
</value>
  </data>
</root>